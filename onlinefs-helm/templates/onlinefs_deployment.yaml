apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appName }}
spec:
  minReadySeconds: 0
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
      - name: {{ .Values.appName }}
        image: "{{ .Values.deployment.image.name }}:{{ .Values.deployment.image.tag }}"
        resources:
          requests:
            memory: "1024Mi"
          limits:
            memory: "4096Mi"
            cpu: "1"
        ports:
          - containerPort: 12800
            name: monitor
          {{ if .Values.debug }}
          - containerPort: 9029
            name: debug
          {{ end }}
        env:
          - name: ONLINEFS_HOME
            value: "/onlinefs"
          {{ if .Values.debug }}
          - name: JAVA_OPTS
            value: {{ .Values.deployment.env.JAVA_OPTS }}
          {{ end }}
        volumeMounts:
          - name: config
            mountPath: "/onlinefs/etc"
            readOnly: true
          - name: secret
            mountPath: "/certs"
            readOnly: true
          - name: onlinefs-volume
            mountPath: /onlinefs
      volumes:
      - name: config
        configMap:
          name: {{ .Values.configmap.name }}
          items:
          - key: "log4j.properties"
            path: "log4j.properties"
          - key: "onlinefs-kafka.properties"
            path: "onlinefs-kafka.properties"
          - key: "onlinefs-site.xml"
            path: "onlinefs-site.xml"
      - name: secret
        secret:
          secretName: {{ .Values.secret.name }}
      - name: onlinefs-volume
        hostPath:
          path: /srv/hops/onlinefs
          type: DirectoryOrCreate # used for logging and storing hopsworks token (so should be fine to create locally)
          